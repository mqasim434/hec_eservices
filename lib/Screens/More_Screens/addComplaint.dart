import 'package:flutter/material.dart';import 'package:hec_eservices/Screens/More_Screens/userGuide.dart';import 'package:hec_eservices/Screens/Navbar_Screens/dashboard.dart';import 'package:hec_eservices/Screens/Navbar_Screens/morePage.dart';import 'package:hec_eservices/Screens/Navbar_Screens/notificationPage.dart';import 'package:hec_eservices/Screens/Navbar_Screens/profile.dart';import 'package:hec_eservices/Widgets/bottomSheet.dart';import 'package:hec_eservices/Widgets/rectangleToggle.dart';import 'package:hec_eservices/utils/MyColors.dart';import 'package:intl_phone_number_input/intl_phone_number_input.dart';import 'package:http/http.dart' as http;import 'package:hec_eservices/utils/config.dart';import '../../Widgets/bottomNav.dart';class AddComplaint extends StatefulWidget {  const AddComplaint({Key? key}) : super(key: key);  @override  _AddComplaintState createState() => _AddComplaintState();}class _AddComplaintState extends State<AddComplaint> {  var searchby = ["CNIC", "Passport"];  int selectedSearchBy = 0;  var services = ["Degree Atestation", "Degree Verification"];  PhoneNumber number = PhoneNumber(isoCode: 'PK');  TextEditingController fullNameController = TextEditingController();  TextEditingController phoneNoController = TextEditingController();  TextEditingController applicationIdController = TextEditingController();  TextEditingController cnicController = TextEditingController();  TextEditingController issueController = TextEditingController();  var serviceController = TextEditingController();  Future<void> addComplaint() async {    print('HELLO');    String service = serviceController.text.toString();    String fullName = fullNameController.text.toString();    String phoneNo = phoneNoController.text.toString();    String cnic = cnicController.text.toString();    String issue = issueController.text.toString();    String applicationId = applicationIdController.text.toString();    String searchBy = selectedSearchBy == 0 ? 'cnic' : 'passport';    var endPoint = Uri.parse(      "$baseUrl/addComplaint",    );    var response = await http.post(endPoint, body: {      'service': service,      'fullName': fullName,      'phoneNo': phoneNo,      'applicationId': applicationId,      'searchBy': searchBy,      'cnic': cnic,      'issue': issue,    });    if (response.statusCode == 200) {      // Request was successful      print('Complaint Added Successfully');      setState(() {        serviceController.clear();        fullNameController.clear();        phoneNoController.clear();        applicationIdController.clear();        selectedSearchBy = 0;        cnicController.clear();        issueController.clear();      });    } else {      // Request failed      print('Error Adding Complaint: ${response.statusCode}');    }  }  @override  Widget build(BuildContext context) {    final bool showFab = MediaQuery.of(context).viewInsets.bottom == 0.0;    return Scaffold(      body: Scaffold(        appBar: AppBar(          title: const Text(            "Complaints",            style: TextStyle(color: Colors.black),          ),          iconTheme: const IconThemeData(color: Colors.black),          elevation: 0,          backgroundColor: Colors.blueGrey[50],        ),        // floatingActionButton: showFab? AssistFAB():null,        body: Container(          padding: const EdgeInsets.all(10),          child: SingleChildScrollView(            child: Column(              children: [                Container(                  margin: const EdgeInsets.only(top: 10),                  child: Align(                      alignment: Alignment.centerLeft,                      child: Text(                        "Add Complaint Ticket",                        style: Theme.of(context)                            .textTheme                            .headline6!                            .copyWith(color: Colors.black),                      )),                ),                const SizedBox(                  height: 10,                ),                Container(                  margin: const EdgeInsets.only(top: 10),                  child: TextFormField(                    controller: serviceController,                    onTap: () {                      MyBottomSheet()                          .showSearchableBottomSheet(                              context, services, "Service")                          .then((value) {                        setState(() {                          serviceController.text = services[value];                        });                      });                    },                    readOnly: true,                    decoration: const InputDecoration(                        suffixIcon: Icon(Icons.arrow_drop_down_sharp),                        labelText: "Service",                        contentPadding: EdgeInsets.all(15),                        border: OutlineInputBorder()),                  ),                ),                // Full Name                Container(                  margin: const EdgeInsets.only(top: 10),                  child: TextFormField(                    controller: fullNameController,                    decoration: const InputDecoration(                        labelText: "Full Name",                        contentPadding: EdgeInsets.all(15),                        border: OutlineInputBorder()),                  ),                ),                const SizedBox(                  height: 10,                ),                // Cell Number                InternationalPhoneNumberInput(                  onInputChanged: (PhoneNumber number) {                    print(number.phoneNumber);                  },                  onInputValidated: (bool value) {                    print(value);                  },                  spaceBetweenSelectorAndTextField: 0,                  inputDecoration: const InputDecoration(                      labelText: "Primary Cell Phone Number",                      contentPadding: EdgeInsets.all(15),                      border: OutlineInputBorder()),                  searchBoxDecoration: const InputDecoration(                      labelText: "Search Country Code",                      contentPadding: EdgeInsets.all(15),                      border: OutlineInputBorder()),                  selectorConfig: const SelectorConfig(                    selectorType: PhoneInputSelectorType.BOTTOM_SHEET,                  ),                  ignoreBlank: false,                  autoValidateMode: AutovalidateMode.disabled,                  selectorTextStyle: const TextStyle(color: Colors.black),                  initialValue: number,                  textFieldController: phoneNoController,                  formatInput: false,                  keyboardType: const TextInputType.numberWithOptions(                      signed: true, decimal: true),                  inputBorder: const OutlineInputBorder(),                  onSaved: (PhoneNumber number) {                    print('On Saved: $number');                  },                ),                const SizedBox(                  height: 10,                ),                // Application ID                Container(                  child: TextFormField(                    controller: applicationIdController,                    decoration: const InputDecoration(                        labelText: "Application ID",                        contentPadding: EdgeInsets.all(15),                        border: OutlineInputBorder()),                  ),                ),                const SizedBox(                  height: 10,                ),                Container(                  margin: const EdgeInsets.only(bottom: 10),                  child: Align(                      alignment: Alignment.centerLeft,                      child: Text(                        "Search By:",                        style: Theme.of(context)                            .textTheme                            .bodyText2!                            .copyWith(color: Colors.black),                      )),                ),                Row(                  children: List.generate(searchby.length, (index) {                    return RectangleToggleButton(                      Label: searchby[index],                      svg: "assets/cnic.svg",                      selected: selectedSearchBy == index ? true : false,                      onSelected: (value) {                        setState(() {                          print("index:index");                          selectedSearchBy = index;                        });                      },                    );                  }),                ),                // Name on Degree                Container(                  margin: const EdgeInsets.only(top: 10),                  child: TextFormField(                    controller: cnicController,                    decoration: InputDecoration(                        labelText: searchby[selectedSearchBy],                        contentPadding: const EdgeInsets.all(15),                        border: const OutlineInputBorder()),                  ),                ),                const SizedBox(                  height: 10,                ),                // Isuue                Container(                  child: TextFormField(                    controller: issueController,                    maxLines: 3,                    decoration: const InputDecoration(                        labelText: "Issue",                        contentPadding: EdgeInsets.all(15),                        border: OutlineInputBorder()),                  ),                ),                const SizedBox(                  height: 10,                ),                ManualDownloadContainer(                    icon: Icons.upload,                    textTheme: Theme.of(context).textTheme,                    Name: "Document",                    Trailing: "Upload",                    Size: "Max 5 MP",                    onPresses: () {                      MyBottomSheet().showImageSelectorBottomSheet(context);                    }),                Align(                  child: InkWell(                    onTap: () {                      addComplaint();                      showDialog(context: context, builder: (context){                        return AlertDialog(                          title: const Text('Your Complaint has been added successfully'),                          actions: [                            TextButton(onPressed: (){                              Navigator.pop(context);                              Navigator.pop(context);                            }, child: const Text('OK'),),                          ],                        );                      });                    },                    child: Container(                      width: double.maxFinite,                      margin: const EdgeInsets.symmetric(vertical: 20),                      decoration: BoxDecoration(                          borderRadius: BorderRadius.circular(5),                          gradient: MyColors.gradient3),                      padding: const EdgeInsets.symmetric(vertical: 15),                      child: const Center(                        child: Text(                          "Add",                          style: TextStyle(color: Colors.white),                        ),                      ),                    ),                  ),                ),                const SizedBox(                  height: 70,                )              ],            ),          ),        ),      ),      floatingActionButton: FloatingActionButton(        onPressed: () {          Navigator.pushReplacement(            context,            MaterialPageRoute(              builder: (context) => const AddComplaint(),            ),          );        },        backgroundColor: MyColors.greenColor,        child: const Icon(          Icons.add,        ),      ),      floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,      bottomNavigationBar: MyBottomNav(        initialSelectedIndex: 3,        onSeleted: (index) {          print("HELLO");          if (index != 0) {            Navigator.pushReplacement(context,                MaterialPageRoute(builder: (context) {              return index == 1                  ? ProfilePage()                  : index == 2                      ? const NotificationPage()                      : const MorePage();            }));          }        },      ),    );  }}